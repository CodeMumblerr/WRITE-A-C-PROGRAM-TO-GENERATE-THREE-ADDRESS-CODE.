#include <stdio.h>
#include <string.h>
void reverseString(char* str) {
    int length = strlen(str);
    for (int i = 0; i < length / 2; i++) {
        char temp = str[i];
        str[i] = str[length - i - 1];
        str[length - i - 1] = temp;
    }
}
void pm();
void division();
void plus();
void sub();
char ex[10], expression[10], expression1[10];
int i, ch, j, l, addr = 100;
int main() {
    printf("\nEnter the expression with arithmetic operator:");
    scanf("%s", ex);
    strcpy(expression, ex);
    l = strlen(expression);
    expression1[0] = '\0';
    for (i = 0; i < l; i++) {
        if (expression[i] == '+' || expression[i] == '-') {
            if (expression[i + 2] == '/' || expression[i + 2] == '*') {
                pm();
                break;
            } else if (expression[i] == '+') {
                plus();
                break;
            } else {
                sub();
                break;
            }
        } else if (expression[i] == '/' || expression[i] == '*') {
            division();
            break;
        }
    }
    return 0;
}
void pm() {
    reverseString(expression);
    j = l - i - 1;
    strncat(expression1, expression, j);
    reverseString(expression1);
    printf("Three address code:\ntemp=%s\ntemp1=%c%ctemp\n", expression1, expression[j + 1], expression[j]);
}
void division() {
    strncat(expression1, expression, i + 2);
    printf("Three address code:\ntemp=%s\ntemp1=temp%c%c\n", expression1, expression[i + 2], expression[i + 3]);
}
void plus() {
    strncat(expression1, expression, i + 2);
    printf("Three address code:\ntemp=%s\ntemp1=temp%c%c\n", expression1, expression[i + 2], expression[i + 3]);
}
void sub() {
    strncat(expression1, expression, i + 2);
    printf("Three address code:\ntemp=%s\ntemp1=temp%c%c\n", expression1, expression[i + 2], expression[i + 3]);
}
